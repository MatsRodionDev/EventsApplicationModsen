version: '3.4'

networks:
  eventsapp.db:
  redis:

services:
  eventsapp.db:
    image: "mcr.microsoft.com/mssql/server:2017-latest-ubuntu"
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=MATs2005!?
    networks:
      - eventsapp.db
    volumes:
      - ./sqlserver/data:/var/opt/mssql/data
      - ./sqlserver/data:/var/opt/mssql/log

  eventsapplication.presentation:
    container_name: api
    image: ${DOCKER_REGISTRY-}eventsapplicationpresentation
    build:
      context: .
      dockerfile: EventsApplication.Presentation/Dockerfile
    ports:
      - 5001:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development      
      - ASPNETCORE_HTTP_PORTS=5001
    depends_on:
      - eventsapp.db
    networks:
      - eventsapp.db
      - redis

  
  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    networks:
      - redis